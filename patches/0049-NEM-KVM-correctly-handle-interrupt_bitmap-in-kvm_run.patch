From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Thomas Prescher <thomas.prescher@cyberus-technology.de>
Date: Wed, 24 Apr 2024 15:36:16 +0200
Subject: [PATCH] NEM/KVM: correctly handle interrupt_bitmap in kvm_run

---
 src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp b/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp
index 5ffeb2cd2a..1f07ff889b 100644
--- a/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp
+++ b/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp
@@ -2502,10 +2502,26 @@ static int nemHCLnxExportState(PVM pVM, PVMCPU pVCpu, PCPUMCTX pCtx, struct kvm_
             NEM_UPDATE_IF_CHANGED(pRun->s.regs.sregs.efer, pCtx->msrEFER, dirty_sregs);
         }
 
-        RT_ZERO(pRun->s.regs.sregs.interrupt_bitmap); /* this is an alternative interrupt injection interface */
 
         if (dirty_sregs) {
             pRun->kvm_dirty_regs |= KVM_SYNC_X86_SREGS;
+        } else {
+            // This is a very weird and poorly documented part of the kvm_run structure.
+            // https://www.kernel.org/doc/html/latest/virt/kvm/api.html explains this the following way:
+            //
+            //   interrupt_bitmap is a bitmap of pending external interrupts. At most one bit may be set.
+            //   This interrupt has been acknowledged by the APIC but not yet injected into the cpu core.
+            //
+            // Looking at the kernel part of SET/GET_SREGS, we can see that this is kinda true, but not quite.
+            // The kernel sets only 1 bit, but never clears any of the fields. Thus, in order to have only
+            // a single bit set, userspace must clear the bitmap iff we haven't modified any SREGS. If we have
+            // modified SREGS, we have to transfer the unmodified bitmap back to KVM, because otherwise, we
+            // would tell KVM that the injection is no longer pending.
+            //
+            //
+            // This is a nasty interface and we should probably do what Qemu does, that is, using SET/GET_SREGS2
+            // where this field is no longer present.
+            RT_ZERO(pRun->s.regs.sregs.interrupt_bitmap);
         }
 
     }
-- 
2.43.0

